{
    "blog": {
        "description": "Writing and Stuff from Isaac Z. Schlueter",
        "name": "izs",
        "title": "blog.izs.me",
        "updated": 1544578035,
        "url": "http://blog.izs.me/",
        "uuid": "t:qZa3tMNNGjX7PQ45aXJ-jw"
    },
    "blog_name": "izs",
    "body": "<p>Labor Day came and I completely forgot that it would mean no Monday morning for writing a post.  Hope you all had great beer and burgers, or whatever you were doing.</p>\n\n<p>In the meantime, I&rsquo;d like to mention something cool.  <a href=\"http://www.julienlecomte.net/\">Julien LeComte</a> has released his <a href=\"http://www.julienlecomte.net/yuicompressor/\">YUI Compressor</a> that includes a CSS minification script that I built here for internal use.</p>\n\n<p>Compression is a little more than just minifying.  Julien&rsquo;s compressor also shortens all local variable names, resulting in significant improvements over minification alone, but without the bug-risks of obfuscation.</p>\n\n<p>It&rsquo;s interesting to me that his tests show that compression is actually more effective than obfuscation when the code is gzipped.  I&rsquo;m not enough of a gzip scholar to know why that is, but in my mind at least, it shuts <a href=\"http://dean.edwards.name/packer/\">packer</a>&rsquo;s Base 62 encoding out of the running.  Additionally, in my <small>(non-scientific, not statistically significant, but probably still accurate)</small> tests, packer adds <abbr title=\"between 100ms and 500ms for any given piece of code\">a significant amount</abbr> of run-time due to the convolutions of eval and a needless large Regex.  You need to have pretty big download gains in order to make it worth putting the browser through that extra work.</p>\n\n<p>Say it once, say it forever, say it to yourself at night, teach it to your children: Javascript obfuscation is pointless and dangerous.  You don&rsquo;t get enough download savings to justify the risk of bugs, you can&rsquo;t <em>really</em> hide your code, and when gzipped, compression is better anyhow.</p>\n\n<p>The CSS Compressor that I wrote doesn&rsquo;t do what <a href=\"http://csstidy.sourceforge.net/\">CSS Tidy</a> does.  There are a few steps that could be taken from CSS Tidy, like shortening <code>margin:1px 1px 1px 1px</code> to just <code>margin:1px</code>.  It doesn&rsquo;t merge properties or background properties.  Like JSMin and the YUI Compressor&rsquo;s javascript minifier, it tries to err on the side of not affecting functionality in any relevant way, while attempting at the maximum compression possible within that boundary.</p>",
    "can_like": false,
    "can_reblog": false,
    "can_reply": false,
    "can_send_in_message": true,
    "date": "2007-09-04 21:21:05 GMT",
    "display_avatar": true,
    "format": "markdown",
    "id": 146672090,
    "is_blocks_post_format": false,
    "note_count": 2,
    "post_url": "http://blog.izs.me/post/146672090/squish-it-good-code-compression-for-the-masses",
    "reblog": {
        "comment": "<p>Labor Day came and I completely forgot that it would mean no Monday morning for writing a post.  Hope you all had great beer and burgers, or whatever you were doing.</p>\n\n<p>In the meantime, I\u2019d like to mention something cool.  <a href=\"http://www.julienlecomte.net/\">Julien LeComte</a> has released his <a href=\"http://www.julienlecomte.net/yuicompressor/\">YUI Compressor</a> that includes a CSS minification script that I built here for internal use.</p>\n\n<p>Compression is a little more than just minifying.  Julien\u2019s compressor also shortens all local variable names, resulting in significant improvements over minification alone, but without the bug-risks of obfuscation.</p>\n\n<p>It\u2019s interesting to me that his tests show that compression is actually more effective than obfuscation when the code is gzipped.  I\u2019m not enough of a gzip scholar to know why that is, but in my mind at least, it shuts <a href=\"http://dean.edwards.name/packer/\">packer</a>\u2019s Base 62 encoding out of the running.  Additionally, in my <small>(non-scientific, not statistically significant, but probably still accurate)</small> tests, packer adds <abbr title=\"between 100ms and 500ms for any given piece of code\">a significant amount</abbr> of run-time due to the convolutions of eval and a needless large Regex.  You need to have pretty big download gains in order to make it worth putting the browser through that extra work.</p>\n\n<p>Say it once, say it forever, say it to yourself at night, teach it to your children: Javascript obfuscation is pointless and dangerous.  You don\u2019t get enough download savings to justify the risk of bugs, you can\u2019t <em>really</em> hide your code, and when gzipped, compression is better anyhow.</p>\n\n<p>The CSS Compressor that I wrote doesn\u2019t do what <a href=\"http://csstidy.sourceforge.net/\">CSS Tidy</a> does.  There are a few steps that could be taken from CSS Tidy, like shortening <code>margin:1px 1px 1px 1px</code> to just <code>margin:1px</code>.  It doesn\u2019t merge properties or background properties.  Like JSMin and the YUI Compressor\u2019s javascript minifier, it tries to err on the side of not affecting functionality in any relevant way, while attempting at the maximum compression possible within that boundary.</p>",
        "tree_html": ""
    },
    "reblog_key": "xTazyEdh",
    "recommended_color": null,
    "recommended_source": null,
    "short_url": "https://tmblr.co/Z7nwWy8lWdQ",
    "slug": "squish-it-good-code-compression-for-the-masses",
    "state": "published",
    "summary": "Squish it good - Code compression for the masses",
    "tags": [
        "Code Beauty",
        "Code Ecosystems"
    ],
    "timestamp": 1188940865,
    "title": "Squish it good - Code compression for the masses",
    "trail": [
        {
            "blog": {
                "active": true,
                "can_be_followed": true,
                "name": "izs",
                "share_following": false,
                "share_likes": false,
                "theme": {
                    "avatar_shape": "square",
                    "background_color": "#444444",
                    "body_font": "Helvetica Neue",
                    "header_bounds": "978,2448,2355,0",
                    "header_focus_height": 1152,
                    "header_focus_width": 2048,
                    "header_full_height": 3264,
                    "header_full_width": 2448,
                    "header_image": "https://static.tumblr.com/d248e27715343669f06a3852fd2cda53/utow0jf/nwUnbvgl6/tumblr_static_d2yiqqjdv1w8gsw0s0g4goc0o.jpg",
                    "header_image_focused": "https://static.tumblr.com/d248e27715343669f06a3852fd2cda53/utow0jf/mA1nbvglg/tumblr_static_tumblr_static_d2yiqqjdv1w8gsw0s0g4goc0o_focused_v3.jpg",
                    "header_image_scaled": "https://static.tumblr.com/d248e27715343669f06a3852fd2cda53/utow0jf/nwUnbvgl6/tumblr_static_d2yiqqjdv1w8gsw0s0g4goc0o_2048_v2.jpg",
                    "header_stretch": true,
                    "link_color": "#FB4C16",
                    "show_avatar": true,
                    "show_description": true,
                    "show_header_image": true,
                    "show_title": true,
                    "title_color": "#fb4c16",
                    "title_font": "Gibson",
                    "title_font_weight": "regular"
                }
            },
            "content": "<p>Labor Day came and I completely forgot that it would mean no Monday morning for writing a post.  Hope you all had great beer and burgers, or whatever you were doing.</p>\n\n<p>In the meantime, I&rsquo;d like to mention something cool.  <a href=\"http://www.julienlecomte.net/\">Julien LeComte</a> has released his <a href=\"http://www.julienlecomte.net/yuicompressor/\">YUI Compressor</a> that includes a CSS minification script that I built here for internal use.</p>\n\n<p>Compression is a little more than just minifying.  Julien&rsquo;s compressor also shortens all local variable names, resulting in significant improvements over minification alone, but without the bug-risks of obfuscation.</p>\n\n<p>It&rsquo;s interesting to me that his tests show that compression is actually more effective than obfuscation when the code is gzipped.  I&rsquo;m not enough of a gzip scholar to know why that is, but in my mind at least, it shuts <a href=\"http://dean.edwards.name/packer/\">packer</a>&rsquo;s Base 62 encoding out of the running.  Additionally, in my <small>(non-scientific, not statistically significant, but probably still accurate)</small> tests, packer adds a significant amount of run-time due to the convolutions of eval and a needless large Regex.  You need to have pretty big download gains in order to make it worth putting the browser through that extra work.</p>\n\n<p>Say it once, say it forever, say it to yourself at night, teach it to your children: Javascript obfuscation is pointless and dangerous.  You don&rsquo;t get enough download savings to justify the risk of bugs, you can&rsquo;t <em>really</em> hide your code, and when gzipped, compression is better anyhow.</p>\n\n<p>The CSS Compressor that I wrote doesn&rsquo;t do what <a href=\"http://csstidy.sourceforge.net/\">CSS Tidy</a> does.  There are a few steps that could be taken from CSS Tidy, like shortening <code>margin:1px 1px 1px 1px</code> to just <code>margin:1px</code>.  It doesn&rsquo;t merge properties or background properties.  Like JSMin and the YUI Compressor&rsquo;s javascript minifier, it tries to err on the side of not affecting functionality in any relevant way, while attempting at the maximum compression possible within that boundary.</p>",
            "content_raw": "<p>Labor Day came and I completely forgot that it would mean no Monday morning for writing a post.  Hope you all had great beer and burgers, or whatever you were doing.</p>\n\n<p>In the meantime, I\u2019d like to mention something cool.  <a href=\"http://www.julienlecomte.net/\">Julien LeComte</a> has released his <a href=\"http://www.julienlecomte.net/yuicompressor/\">YUI Compressor</a> that includes a CSS minification script that I built here for internal use.</p>\n\n<p>Compression is a little more than just minifying.  Julien\u2019s compressor also shortens all local variable names, resulting in significant improvements over minification alone, but without the bug-risks of obfuscation.</p>\n\n<p>It\u2019s interesting to me that his tests show that compression is actually more effective than obfuscation when the code is gzipped.  I\u2019m not enough of a gzip scholar to know why that is, but in my mind at least, it shuts <a href=\"http://dean.edwards.name/packer/\">packer</a>\u2019s Base 62 encoding out of the running.  Additionally, in my <small>(non-scientific, not statistically significant, but probably still accurate)</small> tests, packer adds <abbr title=\"between 100ms and 500ms for any given piece of code\">a significant amount</abbr> of run-time due to the convolutions of eval and a needless large Regex.  You need to have pretty big download gains in order to make it worth putting the browser through that extra work.</p>\n\n<p>Say it once, say it forever, say it to yourself at night, teach it to your children: Javascript obfuscation is pointless and dangerous.  You don\u2019t get enough download savings to justify the risk of bugs, you can\u2019t <em>really</em> hide your code, and when gzipped, compression is better anyhow.</p>\n\n<p>The CSS Compressor that I wrote doesn\u2019t do what <a href=\"http://csstidy.sourceforge.net/\">CSS Tidy</a> does.  There are a few steps that could be taken from CSS Tidy, like shortening <code>margin:1px 1px 1px 1px</code> to just <code>margin:1px</code>.  It doesn\u2019t merge properties or background properties.  Like JSMin and the YUI Compressor\u2019s javascript minifier, it tries to err on the side of not affecting functionality in any relevant way, while attempting at the maximum compression possible within that boundary.</p>",
            "is_current_item": true,
            "is_root_item": true,
            "post": {
                "id": "146672090"
            }
        }
    ],
    "type": "text"
}